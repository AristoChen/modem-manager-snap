From 9630c3e551345a4de421bcfc65652afa9e0bc7a4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Alfonso=20S=C3=A1nchez-Beato?=
 <alfonso.sanchez-beato@canonical.com>
Date: Tue, 28 Aug 2018 09:30:40 +0200
Subject: [PATCH 10/17] cinterion: disable SWWAN support

The PLS62-W does not really support SWWAN even though the AT
command responds to queries.
---
 .../cinterion/mm-broadband-modem-cinterion.c  | 20 ++++++++++++-------
 1 file changed, 13 insertions(+), 7 deletions(-)

diff --git a/plugins/cinterion/mm-broadband-modem-cinterion.c b/plugins/cinterion/mm-broadband-modem-cinterion.c
index 52a21b9..8cbb49c 100644
--- a/plugins/cinterion/mm-broadband-modem-cinterion.c
+++ b/plugins/cinterion/mm-broadband-modem-cinterion.c
@@ -1768,13 +1768,19 @@ swwan_test_ready (MMBaseModem  *_self,
 
     /* Fetch the result to the SWWAN test. If no response given (error triggered),
      * assume unsupported */
-    if (!mm_base_modem_at_command_finish (_self, res, NULL)) {
-        mm_dbg ("SWWAN unsupported");
-        self->priv->swwan_support = FEATURE_NOT_SUPPORTED;
-    } else {
-        mm_dbg ("SWWAN supported");
-        self->priv->swwan_support = FEATURE_SUPPORTED;
-    }
+    /* if (!mm_base_modem_at_command_finish (_self, res, NULL)) { */
+    /*     mm_dbg ("SWWAN unsupported"); */
+    /*     self->priv->swwan_support = FEATURE_NOT_SUPPORTED; */
+    /* } else { */
+    /*     mm_dbg ("SWWAN supported"); */
+    /*     self->priv->swwan_support = FEATURE_SUPPORTED; */
+    /* } */
+    /* CANONICAL It has been detected that the PLS62-W returns a not-supported
+    *  error for AT^SWWAN (+CME ERROR: 4) even though AT^SWWAN=? returns
+    *  '^SWWAN: (0,1), (1-11), (1,2)', which is apparently good. So we disable
+    *  SWWAN for the moment until support can be detected in a better way.
+    */
+    self->priv->swwan_support = FEATURE_NOT_SUPPORTED;
 
     /* Go on and create the bearer */
     common_create_bearer (task);
-- 
2.17.1

