From 33649f330b50b651173267be4fa8d7624eca63a0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Alfonso=20S=C3=A1nchez-Beato?=
 <alfonso.sanchez-beato@canonical.com>
Date: Tue, 20 Nov 2018 12:21:39 +0100
Subject: [PATCH 13/17] bearer: ignore PDP type if CID created by modem

Ignore PDP type when searching for a suitable APN in the contexts
created by the modem. These contexts modify the PDP type to reflect
the PDP types really supported by the network, which might be more
restricted than the one the user asks for.
---
 src/mm-broadband-bearer.c | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/src/mm-broadband-bearer.c b/src/mm-broadband-bearer.c
index 16acb2b..2340917 100644
--- a/src/mm-broadband-bearer.c
+++ b/src/mm-broadband-bearer.c
@@ -879,6 +879,32 @@ parse_pdp_list (MMBaseModem             *modem,
                         pdp->cid);
                 cid = pdp->cid;
             }
+        } else {
+            const gchar *apn;
+
+            apn = mm_bearer_properties_get_apn (mm_base_bearer_peek_config (MM_BASE_BEARER (ctx->self)));
+            /* Check if we have a case of APN overwritten by modem */
+            if (apn != NULL && pdp->apn != NULL && apn[0] != '\0' && pdp->apn[0] != '\0') {
+                size_t requested_len = strlen (apn);
+                if (g_ascii_strncasecmp (pdp->apn, apn, requested_len) == 0) {
+                    size_t existing_len = strlen (pdp->apn);
+                    if ((existing_len > (requested_len + 14)) &&
+                        g_ascii_strncasecmp (&pdp->apn[requested_len], ".mnc", 4) == 0 &&
+                        g_ascii_strncasecmp (&pdp->apn[requested_len + 7], ".mcc", 4) == 0) {
+                        gchar *ip_family_str;
+
+                        /* Found a PDP context with the same APN and re-formatted by modem. */
+                        ip_family_str = mm_bearer_ip_family_build_string_from_mask (pdp->pdp_type);
+                        mm_dbg ("Found PDP context created by modem with CID %u and PDP type %s for APN '%s'",
+                                pdp->cid, ip_family_str, apn ? apn : "");
+                        cid = pdp->cid;
+                        ctx->use_existing_cid = TRUE;
+                        g_free (ip_family_str);
+                        /* In this case, stop searching */
+                        break;
+                    }
+                }
+            }
         }
 
         if (ctx->max_cid < pdp->cid)
-- 
2.17.1

