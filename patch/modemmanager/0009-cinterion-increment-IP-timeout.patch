From fc6ccea855f20475488c70872ba8d0ee46055444 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Alfonso=20S=C3=A1nchez-Beato?=
 <alfonso.sanchez-beato@canonical.com>
Date: Mon, 30 Jul 2018 18:49:05 +0200
Subject: [PATCH 09/17] cinterion: increment IP timeout

Increment timeout before pppd gives up when trying to get an IP address.
Needed as some times this modem does not respond to PPP frames, but we
want NetworkManager to wait a bit to stop pppd - otherwise the port is
not properly closed and does not respond to AT commands anymore.
---
 .../cinterion/mm-broadband-bearer-cinterion.c |  1 +
 .../cinterion/mm-broadband-bearer-cinterion.h |  3 ++
 .../cinterion/mm-broadband-modem-cinterion.c  | 38 ++++++++++++++++---
 3 files changed, 37 insertions(+), 5 deletions(-)

diff --git a/plugins/cinterion/mm-broadband-bearer-cinterion.c b/plugins/cinterion/mm-broadband-bearer-cinterion.c
index 438fb59..7608553 100644
--- a/plugins/cinterion/mm-broadband-bearer-cinterion.c
+++ b/plugins/cinterion/mm-broadband-bearer-cinterion.c
@@ -726,6 +726,7 @@ mm_broadband_bearer_cinterion_new (MMBroadbandModemCinterion *modem,
         user_data,
         MM_BASE_BEARER_MODEM, modem,
         MM_BASE_BEARER_CONFIG, config,
+        "ip-timeout", BEARER_CINTERION_IP_TIMEOUT_DEFAULT,
         NULL);
 }
 
diff --git a/plugins/cinterion/mm-broadband-bearer-cinterion.h b/plugins/cinterion/mm-broadband-bearer-cinterion.h
index d514759..67e7f26 100644
--- a/plugins/cinterion/mm-broadband-bearer-cinterion.h
+++ b/plugins/cinterion/mm-broadband-bearer-cinterion.h
@@ -23,6 +23,9 @@
 #include "mm-broadband-bearer.h"
 #include "mm-broadband-modem-cinterion.h"
 
+/* Allow up to 90s to get a proper IP connection */
+#define BEARER_CINTERION_IP_TIMEOUT_DEFAULT 90
+
 #define MM_TYPE_BROADBAND_BEARER_CINTERION                (mm_broadband_bearer_cinterion_get_type ())
 #define MM_BROADBAND_BEARER_CINTERION(obj)                (G_TYPE_CHECK_INSTANCE_CAST ((obj), MM_TYPE_BROADBAND_BEARER_CINTERION, MMBroadbandBearerCinterion))
 #define MM_BROADBAND_BEARER_CINTERION_CLASS(klass)        (G_TYPE_CHECK_CLASS_CAST ((klass),  MM_TYPE_BROADBAND_BEARER_CINTERION, MMBroadbandBearerCinterionClass))
diff --git a/plugins/cinterion/mm-broadband-modem-cinterion.c b/plugins/cinterion/mm-broadband-modem-cinterion.c
index 14ff248..52a21b9 100644
--- a/plugins/cinterion/mm-broadband-modem-cinterion.c
+++ b/plugins/cinterion/mm-broadband-modem-cinterion.c
@@ -35,6 +35,7 @@
 #include "mm-iface-modem-messaging.h"
 #include "mm-iface-modem-location.h"
 #include "mm-base-modem-at.h"
+#include "mm-broadband-bearer.h"
 #include "mm-broadband-modem-cinterion.h"
 #include "mm-modem-helpers-cinterion.h"
 #include "mm-shared-cinterion.h"
@@ -1702,6 +1703,33 @@ broadband_bearer_new_ready (GObject      *unused,
     g_object_unref (task);
 }
 
+static void
+broadband_bearer_no_swwan_new (MMBroadbandModem *modem,
+                               MMBearerProperties *properties,
+                               GCancellable *cancellable,
+                               GAsyncReadyCallback callback,
+                               gpointer user_data)
+{
+    MMFlowControl flow_control;
+
+    /* Inherit flow control from modem object directly */
+    g_object_get (modem,
+                  MM_BROADBAND_MODEM_FLOW_CONTROL, &flow_control,
+                  NULL);
+
+    g_async_initable_new_async (
+        MM_TYPE_BROADBAND_BEARER,
+        G_PRIORITY_DEFAULT,
+        cancellable,
+        callback,
+        user_data,
+        MM_BASE_BEARER_MODEM,             modem,
+        MM_BASE_BEARER_CONFIG,            properties,
+        MM_BROADBAND_BEARER_FLOW_CONTROL, flow_control,
+        "ip-timeout", BEARER_CINTERION_IP_TIMEOUT_DEFAULT,
+        NULL);
+}
+
 static void
 common_create_bearer (GTask *task)
 {
@@ -1712,11 +1740,11 @@ common_create_bearer (GTask *task)
     switch (self->priv->swwan_support) {
     case FEATURE_NOT_SUPPORTED:
         mm_dbg ("^SWWAN not supported, creating default bearer...");
-        mm_broadband_bearer_new (MM_BROADBAND_MODEM (self),
-                                 g_task_get_task_data (task),
-                                 NULL, /* cancellable */
-                                 (GAsyncReadyCallback)broadband_bearer_new_ready,
-                                 task);
+        broadband_bearer_no_swwan_new (MM_BROADBAND_MODEM (self),
+                                       g_task_get_task_data (task),
+                                       NULL, /* cancellable */
+                                       (GAsyncReadyCallback)broadband_bearer_new_ready,
+                                       task);
         return;
     case FEATURE_SUPPORTED:
         mm_dbg ("^SWWAN supported, creating cinterion bearer...");
-- 
2.17.1

